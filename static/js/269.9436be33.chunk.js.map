{"version":3,"file":"static/js/269.9436be33.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/movies.module.css?968c","components/Movies/Movies.jsx","shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"movies_title__5EHmf\",\"wrap\":\"movies_wrap__KvAv7\",\"movieForm\":\"movies_movieForm__3MkRY\",\"movieInput\":\"movies_movieInput__3SULj\",\"btn\":\"movies_btn__aShtF\",\"list\":\"movies_list__qGO0R\",\"listItem\":\"movies_listItem__iC3Fa\",\"loading\":\"movies_loading__wawUQ\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovie } from '../../shared/services/api';\nimport css from './movies.module.css';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const { results } = await searchMovie(searchQuery);\n        setData(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (searchQuery) {\n      getData();\n    }\n  }, [searchQuery]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <h2 className={css.title}>Search movies:</h2>\n\n        <form onSubmit={handleSubmit} className={css.movieForm}>\n          <input\n            value={query}\n            onChange={handleChange}\n            name=\"search\"\n            type=\"text\"\n            placeholder=\"Type here\"\n            className={css.movieInput}\n          />\n          <button type=\"submit\" className={css.btn}>\n            Search\n          </button>\n        </form>\n      </div>\n      <ul className={css.list}>\n        {searchQuery ? (\n          loading ? (\n            <div className={css.loading}>\n              <ColorRing\n                visible={true}\n                height=\"80\"\n                width=\"80\"\n                ariaLabel=\"blocks-loading\"\n                wrapperStyle={{ margin: 'auto' }}\n                wrapperClass=\"blocks-wrapper\"\n                colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n              />\n            </div>\n          ) : data.length > 0 ? (\n            data.map(({ title, id }) => (\n              <li key={id} className={css.listItem}>\n                <Link state={{ from: location }} to={`/movies/${id}`}>\n                  {title}\n                </Link>\n              </li>\n            ))\n          ) : (\n            <p>\n              No movies with this title were found. Try entering another title\n            </p>\n          )\n        ) : (\n          <p className={css.descr}></p>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31449444226ba6345698313fe055564a',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["useState","data","setData","loading","setLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","query","setQuery","location","useLocation","useEffect","getData","searchMovie","results","console","log","className","css","onSubmit","e","preventDefault","value","onChange","target","name","type","placeholder","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","length","map","title","id","state","from","to","instance","axios","baseURL","params","api_key","language","getTrendingMovies","getMovieDetails","getMovieCast","getMovieReviews","queryString"],"sourceRoot":""}