{"version":3,"file":"static/js/721.7b36df79.chunk.js","mappings":"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","sources":["components/Home/home.styled.js","webpack://goit-react-hw-05-movies/./src/components/Home/home.module.css?3638","components/Home/Home.jsx","components/Pagination/paginator.styled.js","components/Pagination/Paginator.jsx","shared/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n// export const HeaderTitle = styled.h1`\n//   padding-top: 20px;\n//   padding-bottom: 20px;\n//   display: inline-block;\n// `;\n\nexport const ListMovies = styled.ul`\n  list-style-type: none;\n      margin-bottom: 10px;\n    font-size: 20px;\n    justify-content: space-around;\n    display: flex;\n    flex-wrap: wrap;\n    /* gap: 15px; */\n    padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n/* width: calc((100% / 3)-50px); */\npadding:10px;\ndisplay: flex;\nflex-direction:column ;\n`\n  ;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieItem\":\"home_movieItem__MmdJy\",\"mainTitle\":\"home_mainTitle__V0pd9\",\"title\":\"home_title__wNn6R\",\"poster\":\"home_poster__G9a7q\",\"loading\":\"home_loading__ko1Ql\"};","import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { ListMovies, MovieItem } from './home.styled';\nimport { getTrendingMovies } from '../../shared/services/api';\nimport css from './home.module.css';\nimport Paginator from 'components/Pagination/Paginator';\nimport { ColorRing } from 'react-loader-spinner';\n\nconst imgPlaceholder = './src/img/no-poster-available.jpg';\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({ page: 1 });\n  const location = useLocation();\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const page = Number(params.page || 1);\n  const [totalPages, settotalPages] = useState(0);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingMovies(page);\n        setMovies(data.results);\n        settotalPages(data.total_pages);\n        setLoading(false);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getData();\n  }, [page]);\n\n  return (\n    <>\n      <h2 className={css.mainTitle}>Trending movies:</h2>\n      <ListMovies>\n        {loading ? (\n          <div className={css.loading}>\n            <ColorRing\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              ariaLabel=\"blocks-loading\"\n              wrapperStyle={{ margin: 'auto' }}\n              wrapperClass=\"blocks-wrapper\"\n              colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n            />\n          </div>\n        ) : (\n          movies.map(({ title, id, poster_path }) => (\n            <MovieItem key={id} className={css.movieItem}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  className={css.poster}\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : imgPlaceholder\n                  }\n                  alt={title}\n                />\n                <p className={css.title}>{title}</p>\n              </Link>\n            </MovieItem>\n          ))\n        )}\n      </ListMovies>\n      <Paginator\n        totalPages={totalPages}\n        setSearchParams={setSearchParams}\n        params={params}\n        currentPage={Number(params?.page - 1) || 0}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledPaginate = styled(ReactPaginate)`\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 40px 0 ;\n  font-size: 18px;\n  .selected {\n    color: white;\n    background-color: orange;\n    /* border: 1px solid orange; */\n    &:hover{\n      background-color: orangered;\n    }\n  }\n  li {\n    list-style-type: none;\n    /* border: 1px solid #7400bc; */\n    border-radius: 7px;\n    color:#fff;\n    background-color:#b641ff ;\n    &:hover {\n      background-color: #7400bc;\n      color: #fff;\n    }\n  }\n  a {\n    display: block;\n    padding: 5px 10px;\n    cursor: pointer;\n  }\n`;","import { StyledPaginate } from './paginator.styled';\nimport PropTypes from 'prop-types';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\n\nfunction Paginator({ totalPages, setSearchParams, params, currentPage }) {\n  const handlePageClick = event => {\n    // устанавливаю page= номеру страницы в URL\n\n    // передаем другие параметры из строки в url\n    setSearchParams({ ...params, page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <StyledPaginate\n        breakLabel=\"...\"\n        previousLabel={<IoIosArrowBack />}\n        nextLabel={<IoIosArrowForward />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={2}\n        pageCount={totalPages}\n        renderOnZeroPageCount={null}\n        forcePage={currentPage}\n      />\n    </>\n  );\n}\n\nPaginator.propTypes = {\n  totalPages: PropTypes.number.isRequired,\n  setSearchParams: PropTypes.func.isRequired,\n  params: PropTypes.object.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n\nexport default Paginator;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '31449444226ba6345698313fe055564a',\n    language: 'en-US',\n  },\n});\n\nexport async function getTrendingMovies(page) {\n  const query = `/trending/movie/week`;\n  try {\n    const { data } = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieDetails(id) {\n  const query = `/movie/${id}`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieCast(id) {\n  const query = `/movie/${id}/credits`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMovieReviews(id) {\n  const query = `/movie/${id}/reviews`;\n  try {\n    const { data } = await instance.get(query);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovie(queryString, page) {\n  const query = `/search/movie?query=${queryString}`;\n  try {\n    const data = await instance.get(query, {\n      params: {\n        page,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}"],"names":["ListMovies","styled","MovieItem","useState","loading","setLoading","movies","setMovies","useSearchParams","page","searchParams","setSearchParams","location","useLocation","params","useMemo","Object","fromEntries","Number","totalPages","settotalPages","useEffect","getData","getTrendingMovies","data","results","total_pages","alert","message","className","css","visible","height","width","ariaLabel","wrapperStyle","margin","wrapperClass","colors","map","title","id","poster_path","to","state","from","src","alt","Paginator","currentPage","StyledPaginate","ReactPaginate","breakLabel","previousLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","renderOnZeroPageCount","forcePage","instance","axios","baseURL","api_key","language","get","getMovieDetails","query","getMovieCast","getMovieReviews","searchMovie","queryString"],"sourceRoot":""}